services:
  web:
    build:
      context: .
      args:
       - DEBUG=False
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py collectstatic --noinput &&
             gunicorn -c gunicorn_config.py"
    volumes:
      - ./backend:/backend
    env_file:
      - .env

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./backend:/backend
    depends_on:
      - web

  # broker:
  #   image: redis:latest
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./data/redis:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   depends_on:
  #     - web

  # celery:
  #   build:
  #     context: .
  #     args:
  #      - DEBUG=True
  #   command: celery -A backend worker --loglevel=info
  #   volumes:
  #     - ./backend:/backend
  #   env_file:
  #     - .env
  #   depends_on:
  #     - broker

  # celery_beat:
  #   build:
  #     context: .
  #     args:
  #       - DEBUG=True
  #   command: celery -A backend beat --loglevel=info
  #   volumes:
  #     - ./backend:/backend
  #   env_file:
  #     - .env
  #   depends_on:
  #     - celery

  # flower:
  #   build:
  #     context: .
  #     args:
  #       - DEBUG=True
  #   command: >
  #     sh -c "sleep 10 &&
  #           celery -A backend flower --port=5555"
  #   env_file:
  #     - .env
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - celery_beat
